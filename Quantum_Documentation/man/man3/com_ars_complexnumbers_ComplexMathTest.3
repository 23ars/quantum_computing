.TH "com.ars.complexnumbers.ComplexMathTest" 3 "Wed Nov 23 2016" "quantum - computing" \" -*- nroff -*-
.ad l
.nh
.SH NAME
com.ars.complexnumbers.ComplexMathTest \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBsetUp\fP ()  throws Exception "
.br
.ti -1c
.RI "void \fBtearDown\fP ()  throws Exception "
.br
.ti -1c
.RI "void \fBtestConjugate\fP ()"
.br
.ti -1c
.RI "void \fBtestMod\fP ()"
.br
.ti -1c
.RI "void \fBtestAdd\fP ()"
.br
.ti -1c
.RI "void \fBtestSubtract\fP ()"
.br
.ti -1c
.RI "void \fBtestMultiply\fP ()"
.br
.ti -1c
.RI "void \fBtestDivide\fP ()"
.br
.ti -1c
.RI "void \fBtestSquare\fP ()"
.br
.ti -1c
.RI "void \fBtestSine\fP ()"
.br
.ti -1c
.RI "void \fBtestCosine\fP ()"
.br
.ti -1c
.RI "void \fBtestTan\fP ()"
.br
.ti -1c
.RI "void \fBtestExp\fP ()"
.br
.ti -1c
.RI "void \fBtestPow\fP ()"
.br
.ti -1c
.RI "void \fBtestGetArg\fP ()"
.br
.ti -1c
.RI "void \fBtestInverse\fP ()"
.br
.ti -1c
.RI "void \fBtestMultiplyConstant\fP ()"
.br
.ti -1c
.RI "void \fBtestDivisionConstant\fP ()"
.br
.ti -1c
.RI "void \fBtestAddConstant\fP ()"
.br
.ti -1c
.RI "void \fBtestSubtractConstant\fP ()"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.setUp () throws Exception"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.tearDown () throws Exception"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testAdd ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testAddConstant ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testConjugate ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testCosine ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testDivide ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testDivisionConstant ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testExp ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testGetArg ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testInverse ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testMod ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testMultiply ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testMultiplyConstant ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testPow ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testSine ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testSquare ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testSubtract ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testSubtractConstant ()"

.SS "void com\&.ars\&.complexnumbers\&.ComplexMathTest\&.testTan ()"


.SH "Author"
.PP 
Generated automatically by Doxygen for quantum - computing from the source code\&.
